// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Sale = require("./Sale.js");
var Block = require("bs-platform/lib/js/block.js");

function buildOrderItem(name, salePrice, taxRate) {
  return /* record */[
          /* sku */name,
          /* name */name,
          /* suggestedPrice */0,
          /* addedOn */0.0,
          /* salePrice */salePrice,
          /* taxCalculation : SubTotalFirst */Block.__(1, [taxRate])
        ];
}

function buildOrder(items) {
  return /* record */[
          /* id */"test",
          /* customerName */"test",
          /* paid : Some */[/* record */[
              /* subTotal */0,
              /* discount */0,
              /* tax */0,
              /* total */0,
              /* on */0.0,
              /* by */"test"
            ]],
          /* orderItems */items,
          /* discounts : [] */0,
          /* createdOn */0.0,
          /* lastUpdated : None */0,
          /* removed : false */0
        ];
}

function buildSale(name, salePrice, taxRate) {
  return /* record */[
          /* sku */name,
          /* salePrice */salePrice,
          /* productName */name,
          /* taxRate */taxRate,
          /* suggestedPrice */0,
          /* discounts : [] */0
        ];
}

describe("The sale module", (function () {
        describe("when extracting a list of sales from an order", (function () {
                describe("where it is a normal order", (function () {
                        var order = buildOrder(/* :: */[
                              /* record */[
                                /* sku */"bread",
                                /* name */"bread",
                                /* suggestedPrice */0,
                                /* addedOn */0.0,
                                /* salePrice */101,
                                /* taxCalculation : SubTotalFirst */Block.__(1, [18])
                              ],
                              /* :: */[
                                /* record */[
                                  /* sku */"bread",
                                  /* name */"bread",
                                  /* suggestedPrice */0,
                                  /* addedOn */0.0,
                                  /* salePrice */101,
                                  /* taxCalculation : SubTotalFirst */Block.__(1, [18])
                                ],
                                /* :: */[
                                  /* record */[
                                    /* sku */"cheese",
                                    /* name */"cheese",
                                    /* suggestedPrice */0,
                                    /* addedOn */0.0,
                                    /* salePrice */202,
                                    /* taxCalculation : SubTotalFirst */Block.__(1, [18])
                                  ],
                                  /* [] */0
                                ]
                              ]
                            ]);
                        var sales = Sale.listOfSales(order);
                        var bread = /* record */[
                          /* sku */"bread",
                          /* salePrice */101,
                          /* productName */"bread",
                          /* taxRate */18,
                          /* suggestedPrice */0,
                          /* discounts : [] */0
                        ];
                        var cheese = /* record */[
                          /* sku */"cheese",
                          /* salePrice */202,
                          /* productName */"cheese",
                          /* taxRate */18,
                          /* suggestedPrice */0,
                          /* discounts : [] */0
                        ];
                        return Jest.test("it should give a list of sales", (function () {
                                      return Jest.Expect[/* toEqual */12](/* :: */[
                                                  bread,
                                                  /* :: */[
                                                    bread,
                                                    /* :: */[
                                                      cheese,
                                                      /* [] */0
                                                    ]
                                                  ]
                                                ], Jest.Expect[/* expect */0](sales));
                                    }));
                      }));
                return /* () */0;
              }));
        return /* () */0;
      }));

exports.buildOrderItem = buildOrderItem;
exports.buildOrder = buildOrder;
exports.buildSale = buildSale;
/*  Not a pure module */
