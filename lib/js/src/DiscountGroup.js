// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Group = require("./Group.js");
var Percent = require("./Percent.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

function sum(whatToSum, l) {
  return Belt_List.reduce(l, 0, (function (a, c) {
                return a + Curry._1(whatToSum, c) | 0;
              }));
}

function fromOrder(order) {
  return List.map((function (d) {
                var amount = Percent.calculate(d[/* percent */2], Belt_List.reduce(order[/* orderItems */4], 0, (function (a, i) {
                            return a + i[/* suggestedPrice */2] | 0;
                          })));
                return /* record */[
                        /* id */d[/* id */0],
                        /* name */d[/* name */1],
                        /* percent */d[/* percent */2],
                        /* amount */amount
                      ];
              }), order[/* discounts */5]);
}

function fromOrders(orders) {
  return List.map((function (g) {
                return /* record */[
                        /* id */g[/* key */0],
                        /* name */List.nth(g[/* value */1], 0)[/* name */1],
                        /* percent */List.nth(g[/* value */1], 0)[/* percent */2],
                        /* amount */Belt_List.reduce(g[/* value */1], 0, (function (a, d) {
                                return a + d[/* amount */3] | 0;
                              }))
                      ];
              }), Group.by((function (d) {
                    return d[/* id */0];
                  }), List.concat(List.map(fromOrder, orders))));
}

exports.sum = sum;
exports.fromOrder = fromOrder;
exports.fromOrders = fromOrders;
/* Group Not a pure module */
