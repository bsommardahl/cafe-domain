// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var Tax = require("./Tax.js");
var Jest = require("@glennsl/bs-jest/lib/js/src/jest.js");
var Block = require("bs-platform/lib/js/block.js");

describe("Tax utilities", (function () {
        describe("converting tax calculation methods", (function () {
                Jest.test("from valid total first to corresponding tax calculation", (function () {
                        return Jest.Expect[/* toEqual */12](/* TotalFirst */Block.__(0, [15]), Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("totalFirst|15")));
                      }));
                Jest.test("from valid subtotal first to corresponding tax calculation", (function () {
                        return Jest.Expect[/* toEqual */12](/* SubTotalFirst */Block.__(1, [15]), Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("subTotalFirst|15")));
                      }));
                Jest.test("from completely invalid string to exempt tax calculation", (function () {
                        return Jest.Expect[/* toEqual */12](/* Exempt */0, Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("mickeyMouse")));
                      }));
                Jest.test("from subTotalFirst with no percentage string to exempt tax calculation", (function () {
                        return Jest.Expect[/* toEqual */12](/* Exempt */0, Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("subTotalFirst|")));
                      }));
                Jest.test("from subtotalFirst incorrect casing string to corresponding tax calculation", (function () {
                        return Jest.Expect[/* toEqual */12](/* SubTotalFirst */Block.__(1, [20]), Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("SubtotalfIrst|20")));
                      }));
                return Jest.test("from empty string to exempt tax calculation", (function () {
                              return Jest.Expect[/* toEqual */12](/* Exempt */0, Jest.Expect[/* expect */0](Tax.Calculation[/* toMethod */1]("")));
                            }));
              }));
        return /* () */0;
      }));

/*  Not a pure module */
