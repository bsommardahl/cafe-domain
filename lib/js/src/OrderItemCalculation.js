// Generated by BUCKLESCRIPT VERSION 2.2.3, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Belt_List = require("bs-platform/lib/js/belt_List.js");

function calcDiscountTotal(item, discounts) {
  return Belt_List.reduce(discounts, 0, (function (acc, dis) {
                var price = item[/* suggestedPrice */2] / 100;
                var percent = dis[/* percent */2] / 100;
                return acc + price * percent;
              }));
}

function totalFirstCalculator(taxPercent, discountsList, item) {
  var discounts = calcDiscountTotal(item, discountsList);
  var total = item[/* suggestedPrice */2] / 100 - discounts;
  var taxRate = (100 + taxPercent) / 100;
  var subTotal = total / taxRate;
  var tax = total - subTotal;
  return /* float array */[
          subTotal,
          tax,
          total,
          discounts
        ];
}

function subTotalFirstCalculator(taxPercent, discounts, item) {
  var discountCalc = calcDiscountTotal(item, discounts);
  var taxRate = taxPercent / 100;
  var subTotal = item[/* suggestedPrice */2] / 100 - discountCalc;
  var tax = subTotal * taxRate;
  var total = subTotal + tax;
  return /* float array */[
          subTotal,
          tax,
          total,
          discountCalc
        ];
}

function exemptCalculator(_, discounts, item) {
  var discountCalc = calcDiscountTotal(item, discounts);
  var subTotal = item[/* suggestedPrice */2] / 100 - discountCalc;
  return /* float array */[
          subTotal,
          0,
          subTotal,
          discountCalc
        ];
}

function getTotals(discounts, orderItems) {
  var itemTotals = List.map((function (item) {
          var match = item[/* taxCalculation */5];
          if (typeof match === "number") {
            return exemptCalculator(0, discounts, item);
          } else if (match.tag) {
            return subTotalFirstCalculator(match[0], discounts, item);
          } else {
            return totalFirstCalculator(match[0], discounts, item);
          }
        }), orderItems);
  var subTotal = Belt_List.reduce(itemTotals, 0, (function (acc, totals) {
          return acc + totals[/* subTotal */0];
        }));
  var discountCalc = Belt_List.reduce(itemTotals, 0, (function (acc, totals) {
          return acc + totals[/* discounts */3];
        }));
  var tax = Belt_List.reduce(itemTotals, 0, (function (acc, totals) {
          return acc + totals[/* tax */1];
        }));
  var rounded = function (i) {
    return Math.round(i * 100) | 0;
  };
  var total = rounded(subTotal) + rounded(tax) | 0;
  return /* record */[
          /* subTotal */rounded(subTotal),
          /* tax */rounded(tax),
          /* total */total,
          /* discounts */rounded(discountCalc)
        ];
}

exports.calcDiscountTotal = calcDiscountTotal;
exports.totalFirstCalculator = totalFirstCalculator;
exports.subTotalFirstCalculator = subTotalFirstCalculator;
exports.exemptCalculator = exemptCalculator;
exports.getTotals = getTotals;
/* No side effect */
